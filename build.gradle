import java.util.Properties

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
	id "org.flywaydb.flyway" version "9.22.3"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter:3.4.0'
	implementation 'org.springframework.boot:spring-boot-starter-web:3.4.0'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:3.4.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.4.0'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.mockito:mockito-junit-jupiter:5.14.1'
	testImplementation 'org.mockito:mockito-core:5.14.1'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.xerial:sqlite-jdbc:3.47.1.0'
	implementation 'org.hibernate.orm:hibernate-community-dialects:6.6.3.Final'
	implementation 'jakarta.validation:jakarta.validation-api:3.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-validation:3.4.0'
}

// Load .env file
def loadEnvProperties() {
	def envFile = file('.env')
	if (!envFile.exists()) {
		throw new GradleException(".env file not found in project root directory")
	}

	def props = new Properties()
	envFile.withInputStream { stream ->
		props.load(stream)
	}
	return props
}

// Set Flyway properties using .env values
def envProps = loadEnvProperties()

// Modify the DB_URL to include the absolute path for Flyway
def dbUrl = envProps.getProperty('DB_URL')
if (dbUrl.startsWith("jdbc:sqlite:")) {
	def dbPath = dbUrl.replace("jdbc:sqlite:", "") // Extract the relative path (e.g., notesdata.db)
	dbUrl = "jdbc:sqlite:${project.projectDir}/${dbPath}" // Convert it to an absolute path
}

flyway {
	url = dbUrl
	user = ""
	password = ""
	locations = ['filesystem:src/main/resources/db/migration']
	cleanDisabled = false
}

tasks.named('test') {
	useJUnitPlatform()
}
